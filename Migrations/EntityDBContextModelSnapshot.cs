// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teleperformance._2.EntityDB;

#nullable disable

namespace Teleperformance._2.Migrations
{
    [DbContext(typeof(EntityDBContext))]
    partial class EntityDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Teleperformance._2.EntityDB.Class", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Classid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Classid");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.School", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Classid")
                        .HasColumnType("int");

                    b.Property<int?>("Courseid")
                        .HasColumnType("int");

                    b.Property<int>("Schoolid")
                        .HasColumnType("int");

                    b.Property<int?>("Teacherid")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Classid");

                    b.HasIndex("Courseid");

                    b.HasIndex("Schoolid");

                    b.HasIndex("Teacherid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Teacher", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Classid")
                        .HasColumnType("int");

                    b.Property<int?>("Courseid")
                        .HasColumnType("int");

                    b.Property<int?>("Schoolid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Classid");

                    b.HasIndex("Courseid");

                    b.HasIndex("Schoolid");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Course", b =>
                {
                    b.HasOne("Teleperformance._2.EntityDB.Class", null)
                        .WithMany("Courses")
                        .HasForeignKey("Classid");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Student", b =>
                {
                    b.HasOne("Teleperformance._2.EntityDB.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("Classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teleperformance._2.EntityDB.Course", null)
                        .WithMany("Students")
                        .HasForeignKey("Courseid");

                    b.HasOne("Teleperformance._2.EntityDB.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("Schoolid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teleperformance._2.EntityDB.Teacher", null)
                        .WithMany("Students")
                        .HasForeignKey("Teacherid");

                    b.Navigation("Class");

                    b.Navigation("School");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Teacher", b =>
                {
                    b.HasOne("Teleperformance._2.EntityDB.Class", "Class")
                        .WithMany()
                        .HasForeignKey("Classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teleperformance._2.EntityDB.Course", null)
                        .WithMany("Teachers")
                        .HasForeignKey("Courseid");

                    b.HasOne("Teleperformance._2.EntityDB.School", null)
                        .WithMany("Teachers")
                        .HasForeignKey("Schoolid");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Class", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Course", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.School", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Teleperformance._2.EntityDB.Teacher", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
